{
    "sourceFile": "src/app/authentication/otp-submition/otp-submition.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1740509963104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740510105682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+import { Component, OnInit } from '@angular/core';\r\n+import { SharedModule } from '../../shared/shared.module';\r\n+import { Router, RouterLink } from '@angular/router';\r\n+import { LoginService } from '../login.service';\r\n+\r\n+@Component({\r\n+  selector: 'app-otp-submition',\r\n+  standalone: true,\r\n+  imports: [SharedModule, RouterLink],\r\n+  templateUrl: './otp-submition.component.html',\r\n+  styleUrl: './otp-submition.component.scss'\r\n+})\r\n+\r\n+export class OtpSubmitionComponent implements OnInit {\r\n+  mobileNumber = String(localStorage.getItem('mobile-otp'));\r\n+  otp: string = '';\r\n+  isWhatsAppChecked: boolean = false;\r\n+  isFormValid: boolean = false;\r\n+\r\n+  isResendDisabled: boolean = true;\r\n+  timer: number = 60;\r\n+  interval: any;\r\n+  responseMessage: string = '';\r\n+  errorMessage: string = '';\r\n+\r\n+  constructor(\r\n+    private loginService: LoginService,\r\n+    private router: Router) {}\r\n+\r\n+  ngOnInit() {\r\n+    this.startTimer();\r\n+  }\r\n+\r\n+  async onSubmitOtp() {\r\n+\r\n+    try {\r\n+     const result = await this.loginService.verifyOtp(this.mobileNumber, this.otp)\r\n+    } catch (error) {\r\n+\r\n+    }\r\n+    // this.loginService.verifyOtp(this.mobileNumber, this.otp).subscribe({\r\n+    //   next: (response: any) => {\r\n+    //     if (response.isSuccess = 'true' )\r\n+    //       this.router.navigate(['/dashboard'], { queryParams: { key: response.result.token } });\r\n+    //       localStorage.setItem('authToken', response.result.token);\r\n+    //       localStorage.setItem('username', response.result?.user.firstName);\r\n+    //       localStorage.setItem('usermobile', response.result?.user.mobile);\r\n+    //       localStorage.setItem('useremail', response.result?.user.email);\r\n+\r\n+    //       const { address, city, state, zip, country } = response.result?.user;\r\n+\r\n+    //       const addressString = `${address}, ${city}, ${state}, ${zip}, ${country}`;\r\n+\r\n+    //       localStorage.setItem('userAddress', addressString);\r\n+    //   },\r\n+    //   error: (error: any) => {\r\n+    //     this.errorMessage = error.error.errorMessages || 'An error occurred';\r\n+    //     alert(this.errorMessage);\r\n+    //     this.otp = '';\r\n+    //   }\r\n+    // });\r\n+    console.log('a')\r\n+  }\r\n+\r\n+\r\n+  /////************ */\r\n+\r\n+  allowOnlyNumbers(event: KeyboardEvent): void {\r\n+    const charCode = event.key.charCodeAt(0);\r\n+    if (charCode < 48 || charCode > 57) {\r\n+      event.preventDefault();\r\n+    }\r\n+  }\r\n+\r\n+  validateForm(): void {\r\n+    this.isFormValid = this.otp.trim().length >= 4\r\n+  }\r\n+\r\n+  startTimer(): void {\r\n+    this.isResendDisabled = true;\r\n+    this.timer = 60;\r\n+\r\n+    this.interval = setInterval(() => {\r\n+      this.timer--;\r\n+      if (this.timer === 0) {\r\n+        this.isResendDisabled = false;\r\n+        clearInterval(this.interval);\r\n+      }\r\n+    }, 1000);\r\n+  }\r\n+\r\n+  resendOtp(): void {\r\n+    console.log('Resend OTP API call triggered for mobile:', this.mobileNumber);\r\n+    this.startTimer();\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1740510225546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,100 @@\n+import { Component, OnInit } from '@angular/core';\r\n+import { SharedModule } from '../../shared/shared.module';\r\n+import { Router, RouterLink } from '@angular/router';\r\n+import { LoginService } from '../login.service';\r\n+\r\n+@Component({\r\n+  selector: 'app-otp-submition',\r\n+  standalone: true,\r\n+  imports: [SharedModule, RouterLink],\r\n+  templateUrl: './otp-submition.component.html',\r\n+  styleUrl: './otp-submition.component.scss'\r\n+})\r\n+\r\n+export class OtpSubmitionComponent implements OnInit {\r\n+  mobileNumber = String(localStorage.getItem('mobile-otp'));\r\n+  otp: string = '';\r\n+  isWhatsAppChecked: boolean = false;\r\n+  isFormValid: boolean = false;\r\n+\r\n+  isResendDisabled: boolean = true;\r\n+  timer: number = 60;\r\n+  interval: any;\r\n+  responseMessage: string = '';\r\n+  errorMessage: string = '';\r\n+\r\n+  constructor(\r\n+    private loginService: LoginService,\r\n+    private router: Router) {}\r\n+\r\n+  ngOnInit() {\r\n+    this.startTimer();\r\n+  }\r\n+\r\n+  async onSubmitOtp() {\r\n+\r\n+    try {\r\n+     const result = await this.loginService.verifyOtp(this.mobileNumber, this.otp)\r\n+     console.log('OTP Verified:', this.verificationResult);\r\n+\r\n+\r\n+    } catch (error) {\r\n+      console.error('OTP verification failed:', error);\r\n+\r\n+    }\r\n+    // this.loginService.verifyOtp(this.mobileNumber, this.otp).subscribe({\r\n+    //   next: (response: any) => {\r\n+    //     if (response.isSuccess = 'true' )\r\n+    //       this.router.navigate(['/dashboard'], { queryParams: { key: response.result.token } });\r\n+    //       localStorage.setItem('authToken', response.result.token);\r\n+    //       localStorage.setItem('username', response.result?.user.firstName);\r\n+    //       localStorage.setItem('usermobile', response.result?.user.mobile);\r\n+    //       localStorage.setItem('useremail', response.result?.user.email);\r\n+\r\n+    //       const { address, city, state, zip, country } = response.result?.user;\r\n+\r\n+    //       const addressString = `${address}, ${city}, ${state}, ${zip}, ${country}`;\r\n+\r\n+    //       localStorage.setItem('userAddress', addressString);\r\n+    //   },\r\n+    //   error: (error: any) => {\r\n+    //     this.errorMessage = error.error.errorMessages || 'An error occurred';\r\n+    //     alert(this.errorMessage);\r\n+    //     this.otp = '';\r\n+    //   }\r\n+    // });\r\n+    console.log('a')\r\n+  }\r\n+\r\n+\r\n+  /////************ */\r\n+\r\n+  allowOnlyNumbers(event: KeyboardEvent): void {\r\n+    const charCode = event.key.charCodeAt(0);\r\n+    if (charCode < 48 || charCode > 57) {\r\n+      event.preventDefault();\r\n+    }\r\n+  }\r\n+\r\n+  validateForm(): void {\r\n+    this.isFormValid = this.otp.trim().length >= 4\r\n+  }\r\n+\r\n+  startTimer(): void {\r\n+    this.isResendDisabled = true;\r\n+    this.timer = 60;\r\n+\r\n+    this.interval = setInterval(() => {\r\n+      this.timer--;\r\n+      if (this.timer === 0) {\r\n+        this.isResendDisabled = false;\r\n+        clearInterval(this.interval);\r\n+      }\r\n+    }, 1000);\r\n+  }\r\n+\r\n+  resendOtp(): void {\r\n+    console.log('Resend OTP API call triggered for mobile:', this.mobileNumber);\r\n+    this.startTimer();\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1740510234731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,100 @@\n+import { Component, OnInit } from '@angular/core';\r\n+import { SharedModule } from '../../shared/shared.module';\r\n+import { Router, RouterLink } from '@angular/router';\r\n+import { LoginService } from '../login.service';\r\n+\r\n+@Component({\r\n+  selector: 'app-otp-submition',\r\n+  standalone: true,\r\n+  imports: [SharedModule, RouterLink],\r\n+  templateUrl: './otp-submition.component.html',\r\n+  styleUrl: './otp-submition.component.scss'\r\n+})\r\n+\r\n+export class OtpSubmitionComponent implements OnInit {\r\n+  mobileNumber = String(localStorage.getItem('mobile-otp'));\r\n+  otp: string = '';\r\n+  isWhatsAppChecked: boolean = false;\r\n+  isFormValid: boolean = false;\r\n+\r\n+  isResendDisabled: boolean = true;\r\n+  timer: number = 60;\r\n+  interval: any;\r\n+  responseMessage: string = '';\r\n+  errorMessage: string = '';\r\n+\r\n+  constructor(\r\n+    private loginService: LoginService,\r\n+    private router: Router) {}\r\n+\r\n+  ngOnInit() {\r\n+    this.startTimer();\r\n+  }\r\n+\r\n+  async onSubmitOtp() {\r\n+\r\n+    try {\r\n+     const result = await this.loginService.verifyOtp(this.mobileNumber, this.otp)\r\n+     console.log('OTP Verified:', result);\r\n+\r\n+\r\n+    } catch (error) {\r\n+      console.error('OTP verification failed:', error);\r\n+\r\n+    }\r\n+    // this.loginService.verifyOtp(this.mobileNumber, this.otp).subscribe({\r\n+    //   next: (response: any) => {\r\n+    //     if (response.isSuccess = 'true' )\r\n+    //       this.router.navigate(['/dashboard'], { queryParams: { key: response.result.token } });\r\n+    //       localStorage.setItem('authToken', response.result.token);\r\n+    //       localStorage.setItem('username', response.result?.user.firstName);\r\n+    //       localStorage.setItem('usermobile', response.result?.user.mobile);\r\n+    //       localStorage.setItem('useremail', response.result?.user.email);\r\n+\r\n+    //       const { address, city, state, zip, country } = response.result?.user;\r\n+\r\n+    //       const addressString = `${address}, ${city}, ${state}, ${zip}, ${country}`;\r\n+\r\n+    //       localStorage.setItem('userAddress', addressString);\r\n+    //   },\r\n+    //   error: (error: any) => {\r\n+    //     this.errorMessage = error.error.errorMessages || 'An error occurred';\r\n+    //     alert(this.errorMessage);\r\n+    //     this.otp = '';\r\n+    //   }\r\n+    // });\r\n+    console.log('a')\r\n+  }\r\n+\r\n+\r\n+  /////************ */\r\n+\r\n+  allowOnlyNumbers(event: KeyboardEvent): void {\r\n+    const charCode = event.key.charCodeAt(0);\r\n+    if (charCode < 48 || charCode > 57) {\r\n+      event.preventDefault();\r\n+    }\r\n+  }\r\n+\r\n+  validateForm(): void {\r\n+    this.isFormValid = this.otp.trim().length >= 4\r\n+  }\r\n+\r\n+  startTimer(): void {\r\n+    this.isResendDisabled = true;\r\n+    this.timer = 60;\r\n+\r\n+    this.interval = setInterval(() => {\r\n+      this.timer--;\r\n+      if (this.timer === 0) {\r\n+        this.isResendDisabled = false;\r\n+        clearInterval(this.interval);\r\n+      }\r\n+    }, 1000);\r\n+  }\r\n+\r\n+  resendOtp(): void {\r\n+    console.log('Resend OTP API call triggered for mobile:', this.mobileNumber);\r\n+    this.startTimer();\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1740511457076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,10 @@\n \r\n     try {\r\n      const result = await this.loginService.verifyOtp(this.mobileNumber, this.otp)\r\n      console.log('OTP Verified:', result);\r\n+\r\n+\r\n     } catch (error) {\r\n       console.error('OTP verification failed:', error);\r\n \r\n     }\r\n"
                }
            ],
            "date": 1740509963104,
            "name": "Commit-0",
            "content": "import { Component, OnInit } from '@angular/core';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { Router, RouterLink } from '@angular/router';\r\nimport { LoginService } from '../login.service';\r\n\r\n@Component({\r\n  selector: 'app-otp-submition',\r\n  standalone: true,\r\n  imports: [SharedModule, RouterLink],\r\n  templateUrl: './otp-submition.component.html',\r\n  styleUrl: './otp-submition.component.scss'\r\n})\r\n\r\nexport class OtpSubmitionComponent implements OnInit {\r\n  mobileNumber = String(localStorage.getItem('mobile-otp'));\r\n  otp: string = '';\r\n  isWhatsAppChecked: boolean = false;\r\n  isFormValid: boolean = false;\r\n\r\n  isResendDisabled: boolean = true;\r\n  timer: number = 60;\r\n  interval: any;\r\n  responseMessage: string = '';\r\n  errorMessage: string = '';\r\n\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.startTimer();\r\n  }\r\n\r\n  onSubmitOtp() {\r\n    this.loginService.verifyOtp(this.mobileNumber, this.otp).subscribe({\r\n      next: (response: any) => {\r\n        if (response.isSuccess = 'true' )\r\n          this.router.navigate(['/dashboard'], { queryParams: { key: response.result.token } });\r\n          localStorage.setItem('authToken', response.result.token);\r\n          localStorage.setItem('username', response.result?.user.firstName);\r\n          localStorage.setItem('usermobile', response.result?.user.mobile);\r\n          localStorage.setItem('useremail', response.result?.user.email);\r\n\r\n          const { address, city, state, zip, country } = response.result?.user;\r\n\r\n          const addressString = `${address}, ${city}, ${state}, ${zip}, ${country}`;\r\n\r\n          localStorage.setItem('userAddress', addressString);\r\n      },\r\n      error: (error: any) => {\r\n        this.errorMessage = error.error.errorMessages || 'An error occurred';\r\n        alert(this.errorMessage);\r\n        this.otp = '';\r\n      }\r\n    });\r\n    console.log('a')\r\n  }\r\n\r\n\r\n  /////************ */\r\n\r\n  allowOnlyNumbers(event: KeyboardEvent): void {\r\n    const charCode = event.key.charCodeAt(0);\r\n    if (charCode < 48 || charCode > 57) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  validateForm(): void {\r\n    this.isFormValid = this.otp.trim().length >= 4\r\n  }\r\n\r\n  startTimer(): void {\r\n    this.isResendDisabled = true;\r\n    this.timer = 60;\r\n\r\n    this.interval = setInterval(() => {\r\n      this.timer--;\r\n      if (this.timer === 0) {\r\n        this.isResendDisabled = false;\r\n        clearInterval(this.interval);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  resendOtp(): void {\r\n    console.log('Resend OTP API call triggered for mobile:', this.mobileNumber);\r\n    this.startTimer();\r\n  }\r\n}\r\n"
        }
    ]
}